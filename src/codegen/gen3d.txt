float ux2 = ux * ux;
float uy2 = uy * uy;
float uz2 = uz * uz;
float u_dot_u = ux2 + uy2 + uz2;
float cs2 = cs * cs;
float cs4 = cs2 * cs2;
float cs2_cs4 = cs2 * cs4;
float 1_over_cs2_cs4 = 1.0f / cs2_cs4;
float half_rho = 0.5f * rho;

    f_eq[get_node_index(node, 0)] = half_rho*weights[0]*(2.0f*cs2 - ux2 - uy2 - uz2)/cs2;
    f_eq[get_node_index(node, 1)] = 1_over_cs2_cs4*half_rho*weights[1]*(1.0f*cs2*ux2 + 2.0f*cs2_cs4 + 2.0f*cs4*ux - cs4*(ux2 + uy2 + uz2));
    f_eq[get_node_index(node, 2)] = 1_over_cs2_cs4*half_rho*weights[2]*(1.0f*cs2*ux2 + 2.0f*cs2_cs4 - 2.0f*cs4*ux - cs4*(ux2 + uy2 + uz2));
    f_eq[get_node_index(node, 3)] = 1_over_cs2_cs4*half_rho*weights[3]*(1.0f*cs2*uy2 + 2.0f*cs2_cs4 + 2.0f*cs4*uy - cs4*(ux2 + uy2 + uz2));
    f_eq[get_node_index(node, 4)] = 1_over_cs2_cs4*half_rho*weights[4]*(1.0f*cs2*uy2 + 2.0f*cs2_cs4 - 2.0f*cs4*uy - cs4*(ux2 + uy2 + uz2));
    f_eq[get_node_index(node, 5)] = 1_over_cs2_cs4*half_rho*weights[5]*(1.0f*cs2*uz2 + 2.0f*cs2_cs4 + 2.0f*cs4*uz - cs4*(ux2 + uy2 + uz2));
    f_eq[get_node_index(node, 6)] = 1_over_cs2_cs4*half_rho*weights[6]*(1.0f*cs2*uz2 + 2.0f*cs2_cs4 - 2.0f*cs4*uz - cs4*(ux2 + uy2 + uz2));
    f_eq[get_node_index(node, 7)] = 1_over_cs2_cs4*half_rho*weights[7]*(1.0f*cs2*pow(ux + uy, 2) + 2.0f*cs2_cs4 + 2.0f*cs4*(ux + uy) - cs4*(ux2 + uy2 + uz2));
    f_eq[get_node_index(node, 8)] = 1_over_cs2_cs4*half_rho*weights[8]*(1.0f*cs2*pow(ux - uy, 2) + 2.0f*cs2_cs4 - 2.0f*cs4*(ux - uy) - cs4*(ux2 + uy2 + uz2));
    f_eq[get_node_index(node, 9)] = 1_over_cs2_cs4*half_rho*weights[9]*(1.0f*cs2*pow(ux - uy, 2) + 2.0f*cs2_cs4 + 2.0f*cs4*(ux - uy) - cs4*(ux2 + uy2 + uz2));
    f_eq[get_node_index(node, 10)] = 1_over_cs2_cs4*half_rho*weights[10]*(1.0f*cs2*pow(ux + uy, 2) + 2.0f*cs2_cs4 - 2.0f*cs4*(ux + uy) - cs4*(ux2 + uy2 + uz2));
    f_eq[get_node_index(node, 11)] = 1_over_cs2_cs4*half_rho*weights[11]*(1.0f*cs2*pow(ux + uz, 2) + 2.0f*cs2_cs4 + 2.0f*cs4*(ux + uz) - cs4*(ux2 + uy2 + uz2));
    f_eq[get_node_index(node, 12)] = 1_over_cs2_cs4*half_rho*weights[12]*(1.0f*cs2*pow(ux - uz, 2) + 2.0f*cs2_cs4 - 2.0f*cs4*(ux - uz) - cs4*(ux2 + uy2 + uz2));
    f_eq[get_node_index(node, 13)] = 1_over_cs2_cs4*half_rho*weights[13]*(1.0f*cs2*pow(ux - uz, 2) + 2.0f*cs2_cs4 + 2.0f*cs4*(ux - uz) - cs4*(ux2 + uy2 + uz2));
    f_eq[get_node_index(node, 14)] = 1_over_cs2_cs4*half_rho*weights[14]*(1.0f*cs2*pow(ux + uz, 2) + 2.0f*cs2_cs4 - 2.0f*cs4*(ux + uz) - cs4*(ux2 + uy2 + uz2));
    f_eq[get_node_index(node, 15)] = 1_over_cs2_cs4*half_rho*weights[15]*(1.0f*cs2*pow(uy + uz, 2) + 2.0f*cs2_cs4 + 2.0f*cs4*(uy + uz) - cs4*(ux2 + uy2 + uz2));
    f_eq[get_node_index(node, 16)] = 1_over_cs2_cs4*half_rho*weights[16]*(1.0f*cs2*pow(uy - uz, 2) + 2.0f*cs2_cs4 - 2.0f*cs4*(uy - uz) - cs4*(ux2 + uy2 + uz2));
    f_eq[get_node_index(node, 17)] = 1_over_cs2_cs4*half_rho*weights[17]*(1.0f*cs2*pow(uy - uz, 2) + 2.0f*cs2_cs4 + 2.0f*cs4*(uy - uz) - cs4*(ux2 + uy2 + uz2));
    f_eq[get_node_index(node, 18)] = 1_over_cs2_cs4*half_rho*weights[18]*(1.0f*cs2*pow(uy + uz, 2) + 2.0f*cs2_cs4 - 2.0f*cs4*(uy + uz) - cs4*(ux2 + uy2 + uz2));
    f_eq[get_node_index(node, 19)] = 1_over_cs2_cs4*half_rho*weights[19]*(1.0f*cs2*pow(ux + uy + uz, 2) + 2.0f*cs2_cs4 + 2.0f*cs4*(ux + uy + uz) - cs4*(ux2 + uy2 + uz2));
    f_eq[get_node_index(node, 20)] = 1_over_cs2_cs4*half_rho*weights[20]*(1.0f*cs2*pow(-ux + uy + uz, 2) + 2.0f*cs2_cs4 + 2.0f*cs4*(-ux + uy + uz) - cs4*(ux2 + uy2 + uz2));
    f_eq[get_node_index(node, 21)] = 1_over_cs2_cs4*half_rho*weights[21]*(1.0f*cs2*pow(ux - uy + uz, 2) + 2.0f*cs2_cs4 + 2.0f*cs4*(ux - uy + uz) - cs4*(ux2 + uy2 + uz2));
    f_eq[get_node_index(node, 22)] = 1_over_cs2_cs4*half_rho*weights[22]*(1.0f*cs2*pow(ux + uy - uz, 2) + 2.0f*cs2_cs4 - 2.0f*cs4*(ux + uy - uz) - cs4*(ux2 + uy2 + uz2));
    f_eq[get_node_index(node, 23)] = 1_over_cs2_cs4*half_rho*weights[23]*(1.0f*cs2*pow(ux + uy - uz, 2) + 2.0f*cs2_cs4 + 2.0f*cs4*(ux + uy - uz) - cs4*(ux2 + uy2 + uz2));
    f_eq[get_node_index(node, 24)] = 1_over_cs2_cs4*half_rho*weights[24]*(1.0f*cs2*pow(ux - uy + uz, 2) + 2.0f*cs2_cs4 - 2.0f*cs4*(ux - uy + uz) - cs4*(ux2 + uy2 + uz2));
    f_eq[get_node_index(node, 25)] = 1_over_cs2_cs4*half_rho*weights[25]*(1.0f*cs2*pow(-ux + uy + uz, 2) + 2.0f*cs2_cs4 - 2.0f*cs4*(-ux + uy + uz) - cs4*(ux2 + uy2 + uz2));
    f_eq[get_node_index(node, 26)] = 1_over_cs2_cs4*half_rho*weights[26]*(1.0f*cs2*pow(ux + uy + uz, 2) + 2.0f*cs2_cs4 - 2.0f*cs4*(ux + uy + uz) - cs4*(ux2 + uy2 + uz2));

SUGA ET. AL FORMULATION: float ux2 = ux * ux;
float uy2 = uy * uy;
float uz2 = uz * uz;
float u_dot_u = ux2 + uy2 + uz2;
float cs2 = cs * cs;
float cs4 = cs2 * cs2;
float cs2_cs4 = cs2 * cs4;
float 1_over_cs2_cs4 = 1.0f / cs2_cs4;
float half_rho = 0.5f * rho;

    f_eq[get_node_index(node, 0)] = -half_rho*weights[0]*(-2.0f*cs2 + ux2 + uy2 + uz2)*1.0f/cs2;
    f_eq[get_node_index(node, 1)] = 1_over_cs2_cs4*half_rho*weights[1]*(1.0f*cs2*ux2 + 2.0f*cs2_cs4 + 2.0f*cs4*ux - cs4*(ux2 + uy2 + uz2));
    f_eq[get_node_index(node, 2)] = 1_over_cs2_cs4*half_rho*weights[2]*(1.0f*cs2*ux2 + 2.0f*cs2_cs4 - 2.0f*cs4*ux - cs4*(ux2 + uy2 + uz2));
    f_eq[get_node_index(node, 3)] = 1_over_cs2_cs4*half_rho*weights[3]*(1.0f*cs2*uy2 + 2.0f*cs2_cs4 + 2.0f*cs4*uy - cs4*(ux2 + uy2 + uz2));
    f_eq[get_node_index(node, 4)] = 1_over_cs2_cs4*half_rho*weights[4]*(1.0f*cs2*uy2 + 2.0f*cs2_cs4 - 2.0f*cs4*uy - cs4*(ux2 + uy2 + uz2));
    f_eq[get_node_index(node, 5)] = 1_over_cs2_cs4*half_rho*weights[5]*(1.0f*cs2*uz2 + 2.0f*cs2_cs4 + 2.0f*cs4*uz - cs4*(ux2 + uy2 + uz2));
    f_eq[get_node_index(node, 6)] = 1_over_cs2_cs4*half_rho*weights[6]*(1.0f*cs2*uz2 + 2.0f*cs2_cs4 - 2.0f*cs4*uz - cs4*(ux2 + uy2 + uz2));
    f_eq[get_node_index(node, 7)] = 1_over_cs2_cs4*half_rho*weights[7]*(1.0f*cs2*pow(ux + uy, 2) + 2.0f*cs2_cs4 + 2.0f*cs4*(ux + uy) - cs4*(ux2 + uy2 + uz2));
    f_eq[get_node_index(node, 8)] = 1_over_cs2_cs4*half_rho*weights[8]*(1.0f*cs2*pow(ux - uy, 2) + 2.0f*cs2_cs4 - 2.0f*cs4*(ux - uy) - cs4*(ux2 + uy2 + uz2));
    f_eq[get_node_index(node, 9)] = 1_over_cs2_cs4*half_rho*weights[9]*(1.0f*cs2*pow(ux + uy, 2) + 2.0f*cs2_cs4 - 2.0f*cs4*(ux + uy) - cs4*(ux2 + uy2 + uz2));
    f_eq[get_node_index(node, 10)] = 1_over_cs2_cs4*half_rho*weights[10]*(1.0f*cs2*pow(ux - uy, 2) + 2.0f*cs2_cs4 + 2.0f*cs4*(ux - uy) - cs4*(ux2 + uy2 + uz2));
    f_eq[get_node_index(node, 11)] = 1_over_cs2_cs4*half_rho*weights[11]*(1.0f*cs2*pow(ux + uz, 2) + 2.0f*cs2_cs4 + 2.0f*cs4*(ux + uz) - cs4*(ux2 + uy2 + uz2));
    f_eq[get_node_index(node, 12)] = 1_over_cs2_cs4*half_rho*weights[12]*(1.0f*cs2*pow(ux - uz, 2) + 2.0f*cs2_cs4 - 2.0f*cs4*(ux - uz) - cs4*(ux2 + uy2 + uz2));
    f_eq[get_node_index(node, 13)] = 1_over_cs2_cs4*half_rho*weights[13]*(1.0f*cs2*pow(ux + uz, 2) + 2.0f*cs2_cs4 - 2.0f*cs4*(ux + uz) - cs4*(ux2 + uy2 + uz2));
    f_eq[get_node_index(node, 14)] = 1_over_cs2_cs4*half_rho*weights[14]*(1.0f*cs2*pow(ux - uz, 2) + 2.0f*cs2_cs4 + 2.0f*cs4*(ux - uz) - cs4*(ux2 + uy2 + uz2));
    f_eq[get_node_index(node, 15)] = 1_over_cs2_cs4*half_rho*weights[15]*(1.0f*cs2*pow(uy + uz, 2) + 2.0f*cs2_cs4 + 2.0f*cs4*(uy + uz) - cs4*(ux2 + uy2 + uz2));
    f_eq[get_node_index(node, 16)] = 1_over_cs2_cs4*half_rho*weights[16]*(1.0f*cs2*pow(uy - uz, 2) + 2.0f*cs2_cs4 - 2.0f*cs4*(uy - uz) - cs4*(ux2 + uy2 + uz2));
    f_eq[get_node_index(node, 17)] = 1_over_cs2_cs4*half_rho*weights[17]*(1.0f*cs2*pow(uy + uz, 2) + 2.0f*cs2_cs4 - 2.0f*cs4*(uy + uz) - cs4*(ux2 + uy2 + uz2));
    f_eq[get_node_index(node, 18)] = 1_over_cs2_cs4*half_rho*weights[18]*(1.0f*cs2*pow(uy - uz, 2) + 2.0f*cs2_cs4 + 2.0f*cs4*(uy - uz) - cs4*(ux2 + uy2 + uz2));
    f_eq[get_node_index(node, 19)] = 1_over_cs2_cs4*half_rho*weights[19]*(1.0f*cs2*pow(ux + uy + uz, 2) + 2.0f*cs2_cs4 + 2.0f*cs4*(ux + uy + uz) - cs4*(ux2 + uy2 + uz2));
    f_eq[get_node_index(node, 20)] = 1_over_cs2_cs4*half_rho*weights[20]*(1.0f*cs2*pow(-ux + uy + uz, 2) + 2.0f*cs2_cs4 + 2.0f*cs4*(-ux + uy + uz) - cs4*(ux2 + uy2 + uz2));
    f_eq[get_node_index(node, 21)] = 1_over_cs2_cs4*half_rho*weights[21]*(1.0f*cs2*pow(ux + uy - uz, 2) + 2.0f*cs2_cs4 - 2.0f*cs4*(ux + uy - uz) - cs4*(ux2 + uy2 + uz2));
    f_eq[get_node_index(node, 22)] = 1_over_cs2_cs4*half_rho*weights[22]*(1.0f*cs2*pow(ux - uy + uz, 2) + 2.0f*cs2_cs4 + 2.0f*cs4*(ux - uy + uz) - cs4*(ux2 + uy2 + uz2));
    f_eq[get_node_index(node, 23)] = 1_over_cs2_cs4*half_rho*weights[23]*(1.0f*cs2*pow(ux + uy - uz, 2) + 2.0f*cs2_cs4 + 2.0f*cs4*(ux + uy - uz) - cs4*(ux2 + uy2 + uz2));
    f_eq[get_node_index(node, 24)] = 1_over_cs2_cs4*half_rho*weights[24]*(1.0f*cs2*pow(ux - uy + uz, 2) + 2.0f*cs2_cs4 - 2.0f*cs4*(ux - uy + uz) - cs4*(ux2 + uy2 + uz2));
    f_eq[get_node_index(node, 25)] = 1_over_cs2_cs4*half_rho*weights[25]*(1.0f*cs2*pow(ux + uy + uz, 2) + 2.0f*cs2_cs4 - 2.0f*cs4*(ux + uy + uz) - cs4*(ux2 + uy2 + uz2));
    f_eq[get_node_index(node, 26)] = 1_over_cs2_cs4*half_rho*weights[26]*(1.0f*cs2*pow(-ux + uy + uz, 2) + 2.0f*cs2_cs4 - 2.0f*cs4*(-ux + uy + uz) - cs4*(ux2 + uy2 + uz2));
